{
  "name": "morphedit",
  "description": "A desktop application for creating audio reels, samples and editing.",
  "author": "Carlos Eduardo de Paula",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/carlosedp/morphedit.git"
  },
  "keywords": [
    "audio",
    "editor",
    "desktop",
    "react",
    "electron"
  ],
  "homepage": "https://carlosedp.github.io/morphedit/",
  "bugs": {
    "url": "https://github.com/carlosedp/morphedit/issues"
  },
  "private": true,
  "version": "5.7.0",
  "type": "module",
  "scripts": {
    "start": "vite",
    "dev": "vite",
    "build": "bun run generate-sw && tsc -b && vite build && bun run build:manual",
    "build:pwa": "bun run generate-sw && tsc -b && vite build --mode pwa && bun run build:manual",
    "build:manual": "bun scripts/build-manual.js",
    "build:analyze": "bun run build && vite build --mode analyze",
    "generate-sw": "bun scripts/generate-sw.js && bun run generate-sw:pretty",
    "generate-sw:pretty": "prettier --write public/sw.js",
    "clean": "rimraf dist && rimraf node_modules",
    "eslint": "eslint . --fix",
    "pretty": "prettier --write \"./**/*.{js,jsx,mjs,cjs,ts,tsx,json}\"",
    "format": "bun run pretty && bun run eslint",
    "lint": "bun run eslint && bun run pretty && bun run depcheck",
    "depcheck": "knip",
    "preview": "vite preview",
    "test": "vitest",
    "test:run": "vitest run",
    "test:coverage": "vitest run --coverage",
    "test:ui": "vitest --ui",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "electron:dev": "vite build && electron .",
    "electron:pack": "bun run build && electron-builder --dir",
    "electron:dist": "bun run build && electron-builder"
  },
  "dependencies": {
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.1",
    "@fontsource/roboto-mono": "^5.2.6",
    "@mui/icons-material": "^7.2.0",
    "@mui/material": "^7.2.0",
    "electron-updater": "^6.6.2",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "rubberband-wasm": "^3.3.0",
    "wavesurfer.js": "^7.10.0",
    "web-audio-beat-detector": "^8.2.30",
    "zustand": "^5.0.6"
  },
  "devDependencies": {
    "@eslint/js": "^9.31.0",
    "@types/node": "^24.0.14",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@vitejs/plugin-react": "^5.0.0",
    "electron": "^37.2.3",
    "electron-builder": "^26.0.12",
    "eslint": "^9.31.0",
    "@playwright/test": "^1.54.1",
    "@testing-library/jest-dom": "^6.6.3",
    "vitest": "^3.2.4",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-simple-import-sort": "^12.1.1",
    "eslint-plugin-sort-destructure-keys": "^2.0.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "knip": "^5.62.0",
    "marked": "^16.1.0",
    "prettier": "^3.6.2",
    "jsdom": "^26.1.0",
    "playwright": "^1.54.1",
    "rimraf": "^6.0.1",
    "rollup-plugin-visualizer": "^6.0.3",
    "typescript": "~5.8.3",
    "typescript-eslint": "^8.37.0",
    "vite": "^7.0.5",
    "vite-plugin-pwa": "^1.0.1",
    "vite-plugin-top-level-await": "^1.6.0",
    "vite-plugin-wasm": "^3.5.0"
  },
  "main": "electron-main.cjs",
  "build": {
    "appId": "com.carlosedp.morphedit",
    "productName": "MorphEdit",
    "files": [
      "dist/**/*",
      "electron-main.cjs",
      "package.json",
      "preload.js"
    ],
    "publish": {
      "provider": "github",
      "owner": "carlosedp",
      "repo": "morphedit",
      "releaseType": "release",
      "channel": "latest",
      "publishAutoUpdate": true
    },
    "directories": {
      "buildResources": "public",
      "output": "electron-dist"
    },
    "win": {
      "target": [
        "nsis"
      ]
    },
    "mac": {
      "notarize": false,
      "target": {
        "target": "default",
        "arch": [
          "universal"
        ]
      },
      "type": "distribution",
      "gatekeeperAssess": false
    },
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    },
    "linux": {
      "target": [
        "AppImage"
      ]
    }
  }
}
