name: Create Production PR

on:
  push:
    tags:
      - "v*" # Triggers on version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:
    inputs:
      pr_title:
        description: "Title for the PR (optional)"
        required: false
        default: "🚀 Release to Production"
      pr_body:
        description: "Additional description for the PR (optional)"
        required: false
        default: ""

jobs:
  create-production-pr:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current version and branch info
        id: get_info
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(jq -r '.version' package.json)
          CURRENT_BRANCH=${GITHUB_REF_NAME}
          TIMESTAMP=$(date '+%Y%m%d-%H%M%S')

          # Check if triggered by tag or manually
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == refs/tags/* ]]; then
            # Extract tag name for tag-triggered runs
            TAG_NAME=${GITHUB_REF#refs/tags/}
            BRANCH_NAME="release/${TAG_NAME}-${TIMESTAMP}"
            TRIGGER_TYPE="tag"
            echo "Triggered by tag: $TAG_NAME"
          else
            # Manual trigger
            BRANCH_NAME="release/${CURRENT_VERSION}-${TIMESTAMP}"
            TRIGGER_TYPE="manual"
            TAG_NAME=""
            echo "Triggered manually"
          fi

          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "current_branch=$CURRENT_BRANCH" >> $GITHUB_OUTPUT
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
          echo "trigger_type=$TRIGGER_TYPE" >> $GITHUB_OUTPUT
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

          echo "Current version: $CURRENT_VERSION"
          echo "Current branch: $CURRENT_BRANCH"
          echo "Release branch: $BRANCH_NAME"
          echo "Trigger type: $TRIGGER_TYPE"

      - name: Create release branch
        run: |
          git checkout -b ${{ steps.get_info.outputs.branch_name }}
          echo "Created branch: ${{ steps.get_info.outputs.branch_name }}"

      - name: Setup Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Commit and push release branch
        run: |
          # Only commit if there are changes (in case any files were modified)
          if ! git diff --quiet HEAD; then
            git add .
            git commit -m "chore: prepare release branch for production deployment"
          fi
          git push origin ${{ steps.get_info.outputs.branch_name }}

      - name: Create Pull Request to Production
        uses: actions/github-script@v7
        with:
          script: |
            const triggerType = '${{ steps.get_info.outputs.trigger_type }}';
            const tagName = '${{ steps.get_info.outputs.tag_name }}';
            const currentVersion = '${{ steps.get_info.outputs.current_version }}';

            // Determine PR title based on trigger type
            let prTitle;
            if (triggerType === 'tag') {
              prTitle = `🚀 Release ${tagName} to Production`;
            } else {
              prTitle = `${{ github.event.inputs.pr_title }}` || `🚀 Release v${currentVersion} to Production`;
            }

            const userBody = `${{ github.event.inputs.pr_body }}`;

            let prBody;
            if (triggerType === 'tag') {
              prBody = `## Release ${tagName} to Production

              This PR was automatically created when tag \`${tagName}\` was pushed.

              ### Release Information
              - 🏷️ **Tag**: \`${tagName}\`
              - 📦 **Version**: \`${currentVersion}\`
              - 🌿 **Source Branch**: \`${{ steps.get_info.outputs.current_branch }}\`
              - 🚀 **Target**: \`production\`
              - ⏰ **Created**: \`${{ steps.get_info.outputs.timestamp }}\``;
            } else {
              prBody = `## Release v${currentVersion} to Production

              This PR was manually triggered to deploy the current state of **${{ steps.get_info.outputs.current_branch }}** branch to production.

              ### Release Information
              - 📦 **Version**: \`${currentVersion}\`
              - 🌿 **Source Branch**: \`${{ steps.get_info.outputs.current_branch }}\`
              - 🚀 **Target**: \`production\`
              - ⏰ **Created**: \`${{ steps.get_info.outputs.timestamp }}\``;
            }

            if (userBody && userBody.trim()) {
              prBody += `\n\n### Additional Notes\n${userBody}`;
            }

            prBody += `

            ### Deployment
            Once this PR is merged to the \`production\` branch, the GitHub Pages deployment will automatically trigger.

            ### Review Checklist
            - [ ] Version number is correct
            - [ ] All features are working as expected
            - [ ] Ready for production deployment

            ---
            *This PR was created ${triggerType === 'tag' ? 'automatically' : 'manually'} using the Create Production PR workflow.*`;

            const { data: pullRequest } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: prTitle,
              head: '${{ steps.get_info.outputs.branch_name }}',
              base: 'production',
              body: prBody
            });

            console.log(`Created PR #${pullRequest.number}: ${pullRequest.html_url}`);

            // Add labels if they exist
            try {
              const labels = ['release', 'production', triggerType === 'tag' ? 'automated' : 'manual'];
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pullRequest.number,
                labels: labels
              });
            } catch (error) {
              console.log('Note: Could not add labels (they may not exist):', error.message);
            }

            return pullRequest.html_url;

      - name: Summary
        run: |
          echo "## Summary" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ steps.get_info.outputs.trigger_type }}" == "tag" ]]; then
            echo "✅ Triggered by tag: \`${{ steps.get_info.outputs.tag_name }}\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ Triggered manually" >> $GITHUB_STEP_SUMMARY
          fi
          echo "✅ Current version: \`v${{ steps.get_info.outputs.current_version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "✅ Created release branch: \`${{ steps.get_info.outputs.branch_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "✅ Created PR from \`${{ steps.get_info.outputs.current_branch }}\` to \`production\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Next steps:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Review and merge the PR to deploy to production" >> $GITHUB_STEP_SUMMARY
          echo "2. The deployment workflow will automatically trigger on merge" >> $GITHUB_STEP_SUMMARY
